directories:
  buildResources: build
  output: release
appId:  com.electron.electron-vue-boilerplate
productName: Electron Vue Boilerplate
# forceCodeSigning Boolean - Whether to fail if app will be not code signed.
forceCodeSigning: false
artifactName: "${productName}-${os}-${version}.${ext}"
files:
  - "build/**/*"
  - "!node_modules${/*}"
# asar : Package electron code into a asar archive. Set to false to debug issues.
asar: true
compression: maximum
# npmRebuild : Boolean - Whether to rebuild native dependencies before starting to package the app.
npmRebuild: true

# MacOS config : check https://www.electron.build/configuration/mac
mac:
  # Category: https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html#//apple_ref/doc/uid/TP40009250-SW8
  category: public.app-category.utilities
  # target file to release. If you want to add more, don't forget to modify .github/workflows/build.yml accordingly
  target: [dmg]
  icon: "build/electron-app/assets/icon.png"

# .dmg config : check https://www.electron.build/configuration/dmg
dmg:
  icon: "build/electron-app/assets/icon.png"
  iconSize: 96

# Windows config : check https://www.electron.build/configuration/win
win:
  # target file to release. If you want to add more, don't forget to modify .github/workflows/build.yml accordingly
  target: [nsis, msi]
  icon: "build/electron-app/assets/icon.png"

# NSIS config : check https://www.electron.build/configuration/nsis
nsis:
  oneClick: false
  allowToChangeInstallationDirectory: true
  createDesktopShortcut: true

# Linux config
linux:
  # target file to release. If you want to add more, don't forget to modify .github/workflows/build.yml accordingly
  target: [deb,AppImage,apk]
  icon: "build/electron-app/assets/icon.png"
  # category : https://specifications.freedesktop.org/menu-spec/latest/apa.html#main-category-registry
  category: "Utility"