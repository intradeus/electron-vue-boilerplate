name: Build/release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

  build_on_mac:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macOS-latest
    needs: [create-release]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build project (macOS)
        run: npm run dist:m

      - name: display folder
        run: cd build && ls && cd ..

      - name: Upload mac assets
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./build/*.dmg","./build/latest.yml"]'

  build_on_win:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    needs: [create-release]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build project (Windows)
        run: npm run dist:w

      - name: display folder
        run: cd build && dir && cd ..

      - name: Upload windows assets
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./build/*.exe","./build/*.msi"]'


  build_on_linux:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build project (Linux)
        run: npm run dist:l

      - name: display folder
        run: cd build && ls && cd ..

      - name: Upload linux assets
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./build/*.AppImage","./build/*.deb"]'